% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/QCmetrics-class.R
\name{QCapp}
\alias{QCapp}
\alias{QCapp,QCmetrics-method}
\title{Launch QC app}
\usage{
QCapp(
  qcmetrics,
  background = NULL,
  samplesheet = NULL,
  show_all_relationships = TRUE,
  variables = "all"
)

\S4method{QCapp}{QCmetrics}(
  qcmetrics,
  background = NULL,
  samplesheet = NULL,
  show_all_relationships = TRUE,
  variables = "all"
)
}
\arguments{
\item{qcmetrics}{A \linkS4class{QCmetrics} object.}

\item{background}{Object of class \linkS4class{QCmetrics} or class \linkS4class{QCmetricsBG}.
These metrics will be shown as background in the relevant plots.}

\item{samplesheet}{A samplesheet (data.frame), optional argument.
By default, the samplesheet stored within the \linkS4class{QCmetrics} object will be used.}

\item{show_all_relationships}{Show all relationships in relatedness plots?
For large data this can slow down the app considerably given that the number of relations is N^2.
If `FALSE`, individual-level data is shown only for relations passing the relatedness threshold,
all other relations are summarized into hexbins.}

\item{variables}{Optional, which variables in samplesheet to use.}
}
\description{
Visualize a \linkS4class{QCmetrics} object generated using the \code{\link{getQCmetrics}} function.
}
\examples{
library(minfiData)
## Load example data from minfiData package (6 samples)
library(minfiData)
library(dplyr)
baseDir <- system.file("extdata", package="minfiData")
samplesheet <- read.metharray.sheet(baseDir)

# Make sure that the samplesheet contains a 'Sample_Name'
# column with the sample IDs and a 'Sex' column!
samplesheet <- samplesheet \%>\%
                   dplyr::mutate(Sample_Name =  paste(samplesheet$Slide,
                                 samplesheet$Array, sep = "_")) \%>\%
                   dplyr::rename(Sex = sex)

## Get QC metrics
metrics <- getQCmetrics(samplesheet,
  name = "example minfiData",
  calculate_PCs = TRUE,
  n_probes_PCA = 20000,
  heatmap_variables = c("Array", "Slide"),
  heatmap_variables_fct = c("Array", "Slide"))

\dontrun{
QCapp(metrics)
}

# By default the samplesheet used in the getQCmetrics() function will be used.
# However, users can provide an (updated) samplesheet.
# For example: rename the 'age' column to 'Age' so that it will be recognized and used
# to create a scatterplot between Age and Predicted Age
samplesheet <- samplesheet \%>\% dplyr::rename(Age = age)
\dontrun{
QCapp(metrics, samplesheet = samplesheet)
}
}
